def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def min_sdk_version = 23
def target_sdk_version = 35
def compile_sdk_Version = 35

def appplication_id = "com.salesforce.marketingcloud.sfmc_example"

def marketingcloud_sdk_version = '9.0.+'

// SFMC Sdk Config Values.
// It first try to retrieve each value from the `local.properties` file.
// If a value is not specified in `local.properties`, it then tries to fetch it from the system's environment variables.
def PUSH_APP_ID = localProperties.getProperty('PUSH_APP_ID') ?: System.getenv('PUSH_APP_ID')
def PUSH_SENDER_ID = localProperties.getProperty('PUSH_SENDER_ID') ?: System.getenv('PUSH_SENDER_ID')
def PUSH_ACCESS_TOKEN = localProperties.getProperty('PUSH_ACCESS_TOKEN') ?: System.getenv('PUSH_ACCESS_TOKEN')
def PUSH_TSE = localProperties.getProperty('PUSH_TSE') ?: System.getenv('PUSH_TSE')

android.buildFeatures.buildConfig true

android {
    namespace "com.salesforce.marketingcloud.sfmc_example"
    compileSdkVersion compile_sdk_Version
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId appplication_id
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.

        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // SFMC config values setup.
        // Attempt to fetch these values from local.properties. If not found, fall back to system environment variables.
        // Ensure these keys are defined either in your project's local.properties file or as environment variables on your system.
        buildConfigField "String", "PUSH_APP_ID", "\"${PUSH_APP_ID}\""
        buildConfigField "String", "PUSH_SENDER_ID", "\"${PUSH_SENDER_ID}\""
        buildConfigField "String", "PUSH_ACCESS_TOKEN", "\"${PUSH_ACCESS_TOKEN}\""
        buildConfigField "String", "PUSH_TSE", "\"${PUSH_TSE}\""
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "com.salesforce.marketingcloud:marketingcloudsdk:$marketingcloud_sdk_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
}

apply plugin: 'com.google.gms.google-services'
